#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1237325442709970628) {
   out_1237325442709970628[0] = 0;
   out_1237325442709970628[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1237325442709970628[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1237325442709970628[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1237325442709970628[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1237325442709970628[5] = -sin(in_vec[1]);
   out_1237325442709970628[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1237325442709970628[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1237325442709970628[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1237325442709970628[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1237325442709970628[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1237325442709970628[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1237325442709970628[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1237325442709970628[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1237325442709970628[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1237325442709970628[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1237325442709970628[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1237325442709970628[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3629510305670504186) {
   out_3629510305670504186[0] = delta_x[0] + nom_x[0];
   out_3629510305670504186[1] = delta_x[1] + nom_x[1];
   out_3629510305670504186[2] = delta_x[2] + nom_x[2];
   out_3629510305670504186[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3629510305670504186[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3629510305670504186[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3629510305670504186[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3629510305670504186[7] = delta_x[6] + nom_x[7];
   out_3629510305670504186[8] = delta_x[7] + nom_x[8];
   out_3629510305670504186[9] = delta_x[8] + nom_x[9];
   out_3629510305670504186[10] = delta_x[9] + nom_x[10];
   out_3629510305670504186[11] = delta_x[10] + nom_x[11];
   out_3629510305670504186[12] = delta_x[11] + nom_x[12];
   out_3629510305670504186[13] = delta_x[12] + nom_x[13];
   out_3629510305670504186[14] = delta_x[13] + nom_x[14];
   out_3629510305670504186[15] = delta_x[14] + nom_x[15];
   out_3629510305670504186[16] = delta_x[15] + nom_x[16];
   out_3629510305670504186[17] = delta_x[16] + nom_x[17];
   out_3629510305670504186[18] = delta_x[17] + nom_x[18];
   out_3629510305670504186[19] = delta_x[18] + nom_x[19];
   out_3629510305670504186[20] = delta_x[19] + nom_x[20];
   out_3629510305670504186[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3500694904292406605) {
   out_3500694904292406605[0] = -nom_x[0] + true_x[0];
   out_3500694904292406605[1] = -nom_x[1] + true_x[1];
   out_3500694904292406605[2] = -nom_x[2] + true_x[2];
   out_3500694904292406605[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3500694904292406605[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3500694904292406605[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3500694904292406605[6] = -nom_x[7] + true_x[7];
   out_3500694904292406605[7] = -nom_x[8] + true_x[8];
   out_3500694904292406605[8] = -nom_x[9] + true_x[9];
   out_3500694904292406605[9] = -nom_x[10] + true_x[10];
   out_3500694904292406605[10] = -nom_x[11] + true_x[11];
   out_3500694904292406605[11] = -nom_x[12] + true_x[12];
   out_3500694904292406605[12] = -nom_x[13] + true_x[13];
   out_3500694904292406605[13] = -nom_x[14] + true_x[14];
   out_3500694904292406605[14] = -nom_x[15] + true_x[15];
   out_3500694904292406605[15] = -nom_x[16] + true_x[16];
   out_3500694904292406605[16] = -nom_x[17] + true_x[17];
   out_3500694904292406605[17] = -nom_x[18] + true_x[18];
   out_3500694904292406605[18] = -nom_x[19] + true_x[19];
   out_3500694904292406605[19] = -nom_x[20] + true_x[20];
   out_3500694904292406605[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1821110240313906847) {
   out_1821110240313906847[0] = 1.0;
   out_1821110240313906847[1] = 0;
   out_1821110240313906847[2] = 0;
   out_1821110240313906847[3] = 0;
   out_1821110240313906847[4] = 0;
   out_1821110240313906847[5] = 0;
   out_1821110240313906847[6] = 0;
   out_1821110240313906847[7] = 0;
   out_1821110240313906847[8] = 0;
   out_1821110240313906847[9] = 0;
   out_1821110240313906847[10] = 0;
   out_1821110240313906847[11] = 0;
   out_1821110240313906847[12] = 0;
   out_1821110240313906847[13] = 0;
   out_1821110240313906847[14] = 0;
   out_1821110240313906847[15] = 0;
   out_1821110240313906847[16] = 0;
   out_1821110240313906847[17] = 0;
   out_1821110240313906847[18] = 0;
   out_1821110240313906847[19] = 0;
   out_1821110240313906847[20] = 0;
   out_1821110240313906847[21] = 0;
   out_1821110240313906847[22] = 1.0;
   out_1821110240313906847[23] = 0;
   out_1821110240313906847[24] = 0;
   out_1821110240313906847[25] = 0;
   out_1821110240313906847[26] = 0;
   out_1821110240313906847[27] = 0;
   out_1821110240313906847[28] = 0;
   out_1821110240313906847[29] = 0;
   out_1821110240313906847[30] = 0;
   out_1821110240313906847[31] = 0;
   out_1821110240313906847[32] = 0;
   out_1821110240313906847[33] = 0;
   out_1821110240313906847[34] = 0;
   out_1821110240313906847[35] = 0;
   out_1821110240313906847[36] = 0;
   out_1821110240313906847[37] = 0;
   out_1821110240313906847[38] = 0;
   out_1821110240313906847[39] = 0;
   out_1821110240313906847[40] = 0;
   out_1821110240313906847[41] = 0;
   out_1821110240313906847[42] = 0;
   out_1821110240313906847[43] = 0;
   out_1821110240313906847[44] = 1.0;
   out_1821110240313906847[45] = 0;
   out_1821110240313906847[46] = 0;
   out_1821110240313906847[47] = 0;
   out_1821110240313906847[48] = 0;
   out_1821110240313906847[49] = 0;
   out_1821110240313906847[50] = 0;
   out_1821110240313906847[51] = 0;
   out_1821110240313906847[52] = 0;
   out_1821110240313906847[53] = 0;
   out_1821110240313906847[54] = 0;
   out_1821110240313906847[55] = 0;
   out_1821110240313906847[56] = 0;
   out_1821110240313906847[57] = 0;
   out_1821110240313906847[58] = 0;
   out_1821110240313906847[59] = 0;
   out_1821110240313906847[60] = 0;
   out_1821110240313906847[61] = 0;
   out_1821110240313906847[62] = 0;
   out_1821110240313906847[63] = 0;
   out_1821110240313906847[64] = 0;
   out_1821110240313906847[65] = 0;
   out_1821110240313906847[66] = -0.5*state[4];
   out_1821110240313906847[67] = -0.5*state[5];
   out_1821110240313906847[68] = -0.5*state[6];
   out_1821110240313906847[69] = 0;
   out_1821110240313906847[70] = 0;
   out_1821110240313906847[71] = 0;
   out_1821110240313906847[72] = 0;
   out_1821110240313906847[73] = 0;
   out_1821110240313906847[74] = 0;
   out_1821110240313906847[75] = 0;
   out_1821110240313906847[76] = 0;
   out_1821110240313906847[77] = 0;
   out_1821110240313906847[78] = 0;
   out_1821110240313906847[79] = 0;
   out_1821110240313906847[80] = 0;
   out_1821110240313906847[81] = 0;
   out_1821110240313906847[82] = 0;
   out_1821110240313906847[83] = 0;
   out_1821110240313906847[84] = 0;
   out_1821110240313906847[85] = 0;
   out_1821110240313906847[86] = 0;
   out_1821110240313906847[87] = 0.5*state[3];
   out_1821110240313906847[88] = 0.5*state[6];
   out_1821110240313906847[89] = -0.5*state[5];
   out_1821110240313906847[90] = 0;
   out_1821110240313906847[91] = 0;
   out_1821110240313906847[92] = 0;
   out_1821110240313906847[93] = 0;
   out_1821110240313906847[94] = 0;
   out_1821110240313906847[95] = 0;
   out_1821110240313906847[96] = 0;
   out_1821110240313906847[97] = 0;
   out_1821110240313906847[98] = 0;
   out_1821110240313906847[99] = 0;
   out_1821110240313906847[100] = 0;
   out_1821110240313906847[101] = 0;
   out_1821110240313906847[102] = 0;
   out_1821110240313906847[103] = 0;
   out_1821110240313906847[104] = 0;
   out_1821110240313906847[105] = 0;
   out_1821110240313906847[106] = 0;
   out_1821110240313906847[107] = 0;
   out_1821110240313906847[108] = -0.5*state[6];
   out_1821110240313906847[109] = 0.5*state[3];
   out_1821110240313906847[110] = 0.5*state[4];
   out_1821110240313906847[111] = 0;
   out_1821110240313906847[112] = 0;
   out_1821110240313906847[113] = 0;
   out_1821110240313906847[114] = 0;
   out_1821110240313906847[115] = 0;
   out_1821110240313906847[116] = 0;
   out_1821110240313906847[117] = 0;
   out_1821110240313906847[118] = 0;
   out_1821110240313906847[119] = 0;
   out_1821110240313906847[120] = 0;
   out_1821110240313906847[121] = 0;
   out_1821110240313906847[122] = 0;
   out_1821110240313906847[123] = 0;
   out_1821110240313906847[124] = 0;
   out_1821110240313906847[125] = 0;
   out_1821110240313906847[126] = 0;
   out_1821110240313906847[127] = 0;
   out_1821110240313906847[128] = 0;
   out_1821110240313906847[129] = 0.5*state[5];
   out_1821110240313906847[130] = -0.5*state[4];
   out_1821110240313906847[131] = 0.5*state[3];
   out_1821110240313906847[132] = 0;
   out_1821110240313906847[133] = 0;
   out_1821110240313906847[134] = 0;
   out_1821110240313906847[135] = 0;
   out_1821110240313906847[136] = 0;
   out_1821110240313906847[137] = 0;
   out_1821110240313906847[138] = 0;
   out_1821110240313906847[139] = 0;
   out_1821110240313906847[140] = 0;
   out_1821110240313906847[141] = 0;
   out_1821110240313906847[142] = 0;
   out_1821110240313906847[143] = 0;
   out_1821110240313906847[144] = 0;
   out_1821110240313906847[145] = 0;
   out_1821110240313906847[146] = 0;
   out_1821110240313906847[147] = 0;
   out_1821110240313906847[148] = 0;
   out_1821110240313906847[149] = 0;
   out_1821110240313906847[150] = 0;
   out_1821110240313906847[151] = 0;
   out_1821110240313906847[152] = 0;
   out_1821110240313906847[153] = 1.0;
   out_1821110240313906847[154] = 0;
   out_1821110240313906847[155] = 0;
   out_1821110240313906847[156] = 0;
   out_1821110240313906847[157] = 0;
   out_1821110240313906847[158] = 0;
   out_1821110240313906847[159] = 0;
   out_1821110240313906847[160] = 0;
   out_1821110240313906847[161] = 0;
   out_1821110240313906847[162] = 0;
   out_1821110240313906847[163] = 0;
   out_1821110240313906847[164] = 0;
   out_1821110240313906847[165] = 0;
   out_1821110240313906847[166] = 0;
   out_1821110240313906847[167] = 0;
   out_1821110240313906847[168] = 0;
   out_1821110240313906847[169] = 0;
   out_1821110240313906847[170] = 0;
   out_1821110240313906847[171] = 0;
   out_1821110240313906847[172] = 0;
   out_1821110240313906847[173] = 0;
   out_1821110240313906847[174] = 0;
   out_1821110240313906847[175] = 1.0;
   out_1821110240313906847[176] = 0;
   out_1821110240313906847[177] = 0;
   out_1821110240313906847[178] = 0;
   out_1821110240313906847[179] = 0;
   out_1821110240313906847[180] = 0;
   out_1821110240313906847[181] = 0;
   out_1821110240313906847[182] = 0;
   out_1821110240313906847[183] = 0;
   out_1821110240313906847[184] = 0;
   out_1821110240313906847[185] = 0;
   out_1821110240313906847[186] = 0;
   out_1821110240313906847[187] = 0;
   out_1821110240313906847[188] = 0;
   out_1821110240313906847[189] = 0;
   out_1821110240313906847[190] = 0;
   out_1821110240313906847[191] = 0;
   out_1821110240313906847[192] = 0;
   out_1821110240313906847[193] = 0;
   out_1821110240313906847[194] = 0;
   out_1821110240313906847[195] = 0;
   out_1821110240313906847[196] = 0;
   out_1821110240313906847[197] = 1.0;
   out_1821110240313906847[198] = 0;
   out_1821110240313906847[199] = 0;
   out_1821110240313906847[200] = 0;
   out_1821110240313906847[201] = 0;
   out_1821110240313906847[202] = 0;
   out_1821110240313906847[203] = 0;
   out_1821110240313906847[204] = 0;
   out_1821110240313906847[205] = 0;
   out_1821110240313906847[206] = 0;
   out_1821110240313906847[207] = 0;
   out_1821110240313906847[208] = 0;
   out_1821110240313906847[209] = 0;
   out_1821110240313906847[210] = 0;
   out_1821110240313906847[211] = 0;
   out_1821110240313906847[212] = 0;
   out_1821110240313906847[213] = 0;
   out_1821110240313906847[214] = 0;
   out_1821110240313906847[215] = 0;
   out_1821110240313906847[216] = 0;
   out_1821110240313906847[217] = 0;
   out_1821110240313906847[218] = 0;
   out_1821110240313906847[219] = 1.0;
   out_1821110240313906847[220] = 0;
   out_1821110240313906847[221] = 0;
   out_1821110240313906847[222] = 0;
   out_1821110240313906847[223] = 0;
   out_1821110240313906847[224] = 0;
   out_1821110240313906847[225] = 0;
   out_1821110240313906847[226] = 0;
   out_1821110240313906847[227] = 0;
   out_1821110240313906847[228] = 0;
   out_1821110240313906847[229] = 0;
   out_1821110240313906847[230] = 0;
   out_1821110240313906847[231] = 0;
   out_1821110240313906847[232] = 0;
   out_1821110240313906847[233] = 0;
   out_1821110240313906847[234] = 0;
   out_1821110240313906847[235] = 0;
   out_1821110240313906847[236] = 0;
   out_1821110240313906847[237] = 0;
   out_1821110240313906847[238] = 0;
   out_1821110240313906847[239] = 0;
   out_1821110240313906847[240] = 0;
   out_1821110240313906847[241] = 1.0;
   out_1821110240313906847[242] = 0;
   out_1821110240313906847[243] = 0;
   out_1821110240313906847[244] = 0;
   out_1821110240313906847[245] = 0;
   out_1821110240313906847[246] = 0;
   out_1821110240313906847[247] = 0;
   out_1821110240313906847[248] = 0;
   out_1821110240313906847[249] = 0;
   out_1821110240313906847[250] = 0;
   out_1821110240313906847[251] = 0;
   out_1821110240313906847[252] = 0;
   out_1821110240313906847[253] = 0;
   out_1821110240313906847[254] = 0;
   out_1821110240313906847[255] = 0;
   out_1821110240313906847[256] = 0;
   out_1821110240313906847[257] = 0;
   out_1821110240313906847[258] = 0;
   out_1821110240313906847[259] = 0;
   out_1821110240313906847[260] = 0;
   out_1821110240313906847[261] = 0;
   out_1821110240313906847[262] = 0;
   out_1821110240313906847[263] = 1.0;
   out_1821110240313906847[264] = 0;
   out_1821110240313906847[265] = 0;
   out_1821110240313906847[266] = 0;
   out_1821110240313906847[267] = 0;
   out_1821110240313906847[268] = 0;
   out_1821110240313906847[269] = 0;
   out_1821110240313906847[270] = 0;
   out_1821110240313906847[271] = 0;
   out_1821110240313906847[272] = 0;
   out_1821110240313906847[273] = 0;
   out_1821110240313906847[274] = 0;
   out_1821110240313906847[275] = 0;
   out_1821110240313906847[276] = 0;
   out_1821110240313906847[277] = 0;
   out_1821110240313906847[278] = 0;
   out_1821110240313906847[279] = 0;
   out_1821110240313906847[280] = 0;
   out_1821110240313906847[281] = 0;
   out_1821110240313906847[282] = 0;
   out_1821110240313906847[283] = 0;
   out_1821110240313906847[284] = 0;
   out_1821110240313906847[285] = 1.0;
   out_1821110240313906847[286] = 0;
   out_1821110240313906847[287] = 0;
   out_1821110240313906847[288] = 0;
   out_1821110240313906847[289] = 0;
   out_1821110240313906847[290] = 0;
   out_1821110240313906847[291] = 0;
   out_1821110240313906847[292] = 0;
   out_1821110240313906847[293] = 0;
   out_1821110240313906847[294] = 0;
   out_1821110240313906847[295] = 0;
   out_1821110240313906847[296] = 0;
   out_1821110240313906847[297] = 0;
   out_1821110240313906847[298] = 0;
   out_1821110240313906847[299] = 0;
   out_1821110240313906847[300] = 0;
   out_1821110240313906847[301] = 0;
   out_1821110240313906847[302] = 0;
   out_1821110240313906847[303] = 0;
   out_1821110240313906847[304] = 0;
   out_1821110240313906847[305] = 0;
   out_1821110240313906847[306] = 0;
   out_1821110240313906847[307] = 1.0;
   out_1821110240313906847[308] = 0;
   out_1821110240313906847[309] = 0;
   out_1821110240313906847[310] = 0;
   out_1821110240313906847[311] = 0;
   out_1821110240313906847[312] = 0;
   out_1821110240313906847[313] = 0;
   out_1821110240313906847[314] = 0;
   out_1821110240313906847[315] = 0;
   out_1821110240313906847[316] = 0;
   out_1821110240313906847[317] = 0;
   out_1821110240313906847[318] = 0;
   out_1821110240313906847[319] = 0;
   out_1821110240313906847[320] = 0;
   out_1821110240313906847[321] = 0;
   out_1821110240313906847[322] = 0;
   out_1821110240313906847[323] = 0;
   out_1821110240313906847[324] = 0;
   out_1821110240313906847[325] = 0;
   out_1821110240313906847[326] = 0;
   out_1821110240313906847[327] = 0;
   out_1821110240313906847[328] = 0;
   out_1821110240313906847[329] = 1.0;
   out_1821110240313906847[330] = 0;
   out_1821110240313906847[331] = 0;
   out_1821110240313906847[332] = 0;
   out_1821110240313906847[333] = 0;
   out_1821110240313906847[334] = 0;
   out_1821110240313906847[335] = 0;
   out_1821110240313906847[336] = 0;
   out_1821110240313906847[337] = 0;
   out_1821110240313906847[338] = 0;
   out_1821110240313906847[339] = 0;
   out_1821110240313906847[340] = 0;
   out_1821110240313906847[341] = 0;
   out_1821110240313906847[342] = 0;
   out_1821110240313906847[343] = 0;
   out_1821110240313906847[344] = 0;
   out_1821110240313906847[345] = 0;
   out_1821110240313906847[346] = 0;
   out_1821110240313906847[347] = 0;
   out_1821110240313906847[348] = 0;
   out_1821110240313906847[349] = 0;
   out_1821110240313906847[350] = 0;
   out_1821110240313906847[351] = 1.0;
   out_1821110240313906847[352] = 0;
   out_1821110240313906847[353] = 0;
   out_1821110240313906847[354] = 0;
   out_1821110240313906847[355] = 0;
   out_1821110240313906847[356] = 0;
   out_1821110240313906847[357] = 0;
   out_1821110240313906847[358] = 0;
   out_1821110240313906847[359] = 0;
   out_1821110240313906847[360] = 0;
   out_1821110240313906847[361] = 0;
   out_1821110240313906847[362] = 0;
   out_1821110240313906847[363] = 0;
   out_1821110240313906847[364] = 0;
   out_1821110240313906847[365] = 0;
   out_1821110240313906847[366] = 0;
   out_1821110240313906847[367] = 0;
   out_1821110240313906847[368] = 0;
   out_1821110240313906847[369] = 0;
   out_1821110240313906847[370] = 0;
   out_1821110240313906847[371] = 0;
   out_1821110240313906847[372] = 0;
   out_1821110240313906847[373] = 1.0;
   out_1821110240313906847[374] = 0;
   out_1821110240313906847[375] = 0;
   out_1821110240313906847[376] = 0;
   out_1821110240313906847[377] = 0;
   out_1821110240313906847[378] = 0;
   out_1821110240313906847[379] = 0;
   out_1821110240313906847[380] = 0;
   out_1821110240313906847[381] = 0;
   out_1821110240313906847[382] = 0;
   out_1821110240313906847[383] = 0;
   out_1821110240313906847[384] = 0;
   out_1821110240313906847[385] = 0;
   out_1821110240313906847[386] = 0;
   out_1821110240313906847[387] = 0;
   out_1821110240313906847[388] = 0;
   out_1821110240313906847[389] = 0;
   out_1821110240313906847[390] = 0;
   out_1821110240313906847[391] = 0;
   out_1821110240313906847[392] = 0;
   out_1821110240313906847[393] = 0;
   out_1821110240313906847[394] = 0;
   out_1821110240313906847[395] = 1.0;
   out_1821110240313906847[396] = 0;
   out_1821110240313906847[397] = 0;
   out_1821110240313906847[398] = 0;
   out_1821110240313906847[399] = 0;
   out_1821110240313906847[400] = 0;
   out_1821110240313906847[401] = 0;
   out_1821110240313906847[402] = 0;
   out_1821110240313906847[403] = 0;
   out_1821110240313906847[404] = 0;
   out_1821110240313906847[405] = 0;
   out_1821110240313906847[406] = 0;
   out_1821110240313906847[407] = 0;
   out_1821110240313906847[408] = 0;
   out_1821110240313906847[409] = 0;
   out_1821110240313906847[410] = 0;
   out_1821110240313906847[411] = 0;
   out_1821110240313906847[412] = 0;
   out_1821110240313906847[413] = 0;
   out_1821110240313906847[414] = 0;
   out_1821110240313906847[415] = 0;
   out_1821110240313906847[416] = 0;
   out_1821110240313906847[417] = 1.0;
   out_1821110240313906847[418] = 0;
   out_1821110240313906847[419] = 0;
   out_1821110240313906847[420] = 0;
   out_1821110240313906847[421] = 0;
   out_1821110240313906847[422] = 0;
   out_1821110240313906847[423] = 0;
   out_1821110240313906847[424] = 0;
   out_1821110240313906847[425] = 0;
   out_1821110240313906847[426] = 0;
   out_1821110240313906847[427] = 0;
   out_1821110240313906847[428] = 0;
   out_1821110240313906847[429] = 0;
   out_1821110240313906847[430] = 0;
   out_1821110240313906847[431] = 0;
   out_1821110240313906847[432] = 0;
   out_1821110240313906847[433] = 0;
   out_1821110240313906847[434] = 0;
   out_1821110240313906847[435] = 0;
   out_1821110240313906847[436] = 0;
   out_1821110240313906847[437] = 0;
   out_1821110240313906847[438] = 0;
   out_1821110240313906847[439] = 1.0;
   out_1821110240313906847[440] = 0;
   out_1821110240313906847[441] = 0;
   out_1821110240313906847[442] = 0;
   out_1821110240313906847[443] = 0;
   out_1821110240313906847[444] = 0;
   out_1821110240313906847[445] = 0;
   out_1821110240313906847[446] = 0;
   out_1821110240313906847[447] = 0;
   out_1821110240313906847[448] = 0;
   out_1821110240313906847[449] = 0;
   out_1821110240313906847[450] = 0;
   out_1821110240313906847[451] = 0;
   out_1821110240313906847[452] = 0;
   out_1821110240313906847[453] = 0;
   out_1821110240313906847[454] = 0;
   out_1821110240313906847[455] = 0;
   out_1821110240313906847[456] = 0;
   out_1821110240313906847[457] = 0;
   out_1821110240313906847[458] = 0;
   out_1821110240313906847[459] = 0;
   out_1821110240313906847[460] = 0;
   out_1821110240313906847[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1819509483554871615) {
   out_1819509483554871615[0] = dt*state[7] + state[0];
   out_1819509483554871615[1] = dt*state[8] + state[1];
   out_1819509483554871615[2] = dt*state[9] + state[2];
   out_1819509483554871615[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1819509483554871615[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1819509483554871615[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1819509483554871615[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1819509483554871615[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1819509483554871615[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1819509483554871615[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1819509483554871615[10] = state[10];
   out_1819509483554871615[11] = state[11];
   out_1819509483554871615[12] = state[12];
   out_1819509483554871615[13] = state[13];
   out_1819509483554871615[14] = state[14];
   out_1819509483554871615[15] = state[15];
   out_1819509483554871615[16] = state[16];
   out_1819509483554871615[17] = state[17];
   out_1819509483554871615[18] = state[18];
   out_1819509483554871615[19] = state[19];
   out_1819509483554871615[20] = state[20];
   out_1819509483554871615[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7480378043706369704) {
   out_7480378043706369704[0] = 1;
   out_7480378043706369704[1] = 0;
   out_7480378043706369704[2] = 0;
   out_7480378043706369704[3] = 0;
   out_7480378043706369704[4] = 0;
   out_7480378043706369704[5] = 0;
   out_7480378043706369704[6] = dt;
   out_7480378043706369704[7] = 0;
   out_7480378043706369704[8] = 0;
   out_7480378043706369704[9] = 0;
   out_7480378043706369704[10] = 0;
   out_7480378043706369704[11] = 0;
   out_7480378043706369704[12] = 0;
   out_7480378043706369704[13] = 0;
   out_7480378043706369704[14] = 0;
   out_7480378043706369704[15] = 0;
   out_7480378043706369704[16] = 0;
   out_7480378043706369704[17] = 0;
   out_7480378043706369704[18] = 0;
   out_7480378043706369704[19] = 0;
   out_7480378043706369704[20] = 0;
   out_7480378043706369704[21] = 0;
   out_7480378043706369704[22] = 1;
   out_7480378043706369704[23] = 0;
   out_7480378043706369704[24] = 0;
   out_7480378043706369704[25] = 0;
   out_7480378043706369704[26] = 0;
   out_7480378043706369704[27] = 0;
   out_7480378043706369704[28] = dt;
   out_7480378043706369704[29] = 0;
   out_7480378043706369704[30] = 0;
   out_7480378043706369704[31] = 0;
   out_7480378043706369704[32] = 0;
   out_7480378043706369704[33] = 0;
   out_7480378043706369704[34] = 0;
   out_7480378043706369704[35] = 0;
   out_7480378043706369704[36] = 0;
   out_7480378043706369704[37] = 0;
   out_7480378043706369704[38] = 0;
   out_7480378043706369704[39] = 0;
   out_7480378043706369704[40] = 0;
   out_7480378043706369704[41] = 0;
   out_7480378043706369704[42] = 0;
   out_7480378043706369704[43] = 0;
   out_7480378043706369704[44] = 1;
   out_7480378043706369704[45] = 0;
   out_7480378043706369704[46] = 0;
   out_7480378043706369704[47] = 0;
   out_7480378043706369704[48] = 0;
   out_7480378043706369704[49] = 0;
   out_7480378043706369704[50] = dt;
   out_7480378043706369704[51] = 0;
   out_7480378043706369704[52] = 0;
   out_7480378043706369704[53] = 0;
   out_7480378043706369704[54] = 0;
   out_7480378043706369704[55] = 0;
   out_7480378043706369704[56] = 0;
   out_7480378043706369704[57] = 0;
   out_7480378043706369704[58] = 0;
   out_7480378043706369704[59] = 0;
   out_7480378043706369704[60] = 0;
   out_7480378043706369704[61] = 0;
   out_7480378043706369704[62] = 0;
   out_7480378043706369704[63] = 0;
   out_7480378043706369704[64] = 0;
   out_7480378043706369704[65] = 0;
   out_7480378043706369704[66] = 1;
   out_7480378043706369704[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7480378043706369704[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7480378043706369704[69] = 0;
   out_7480378043706369704[70] = 0;
   out_7480378043706369704[71] = 0;
   out_7480378043706369704[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7480378043706369704[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7480378043706369704[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7480378043706369704[75] = 0;
   out_7480378043706369704[76] = 0;
   out_7480378043706369704[77] = 0;
   out_7480378043706369704[78] = 0;
   out_7480378043706369704[79] = 0;
   out_7480378043706369704[80] = 0;
   out_7480378043706369704[81] = 0;
   out_7480378043706369704[82] = 0;
   out_7480378043706369704[83] = 0;
   out_7480378043706369704[84] = 0;
   out_7480378043706369704[85] = 0;
   out_7480378043706369704[86] = 0;
   out_7480378043706369704[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7480378043706369704[88] = 1;
   out_7480378043706369704[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7480378043706369704[90] = 0;
   out_7480378043706369704[91] = 0;
   out_7480378043706369704[92] = 0;
   out_7480378043706369704[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7480378043706369704[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7480378043706369704[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7480378043706369704[96] = 0;
   out_7480378043706369704[97] = 0;
   out_7480378043706369704[98] = 0;
   out_7480378043706369704[99] = 0;
   out_7480378043706369704[100] = 0;
   out_7480378043706369704[101] = 0;
   out_7480378043706369704[102] = 0;
   out_7480378043706369704[103] = 0;
   out_7480378043706369704[104] = 0;
   out_7480378043706369704[105] = 0;
   out_7480378043706369704[106] = 0;
   out_7480378043706369704[107] = 0;
   out_7480378043706369704[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7480378043706369704[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7480378043706369704[110] = 1;
   out_7480378043706369704[111] = 0;
   out_7480378043706369704[112] = 0;
   out_7480378043706369704[113] = 0;
   out_7480378043706369704[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7480378043706369704[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7480378043706369704[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7480378043706369704[117] = 0;
   out_7480378043706369704[118] = 0;
   out_7480378043706369704[119] = 0;
   out_7480378043706369704[120] = 0;
   out_7480378043706369704[121] = 0;
   out_7480378043706369704[122] = 0;
   out_7480378043706369704[123] = 0;
   out_7480378043706369704[124] = 0;
   out_7480378043706369704[125] = 0;
   out_7480378043706369704[126] = 0;
   out_7480378043706369704[127] = 0;
   out_7480378043706369704[128] = 0;
   out_7480378043706369704[129] = 0;
   out_7480378043706369704[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7480378043706369704[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7480378043706369704[132] = 1;
   out_7480378043706369704[133] = 0;
   out_7480378043706369704[134] = 0;
   out_7480378043706369704[135] = 0;
   out_7480378043706369704[136] = 0;
   out_7480378043706369704[137] = 0;
   out_7480378043706369704[138] = 0;
   out_7480378043706369704[139] = 0;
   out_7480378043706369704[140] = 0;
   out_7480378043706369704[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7480378043706369704[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7480378043706369704[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7480378043706369704[144] = 0;
   out_7480378043706369704[145] = 0;
   out_7480378043706369704[146] = 0;
   out_7480378043706369704[147] = 0;
   out_7480378043706369704[148] = 0;
   out_7480378043706369704[149] = 0;
   out_7480378043706369704[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7480378043706369704[151] = 0;
   out_7480378043706369704[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7480378043706369704[153] = 0;
   out_7480378043706369704[154] = 1;
   out_7480378043706369704[155] = 0;
   out_7480378043706369704[156] = 0;
   out_7480378043706369704[157] = 0;
   out_7480378043706369704[158] = 0;
   out_7480378043706369704[159] = 0;
   out_7480378043706369704[160] = 0;
   out_7480378043706369704[161] = 0;
   out_7480378043706369704[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7480378043706369704[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7480378043706369704[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7480378043706369704[165] = 0;
   out_7480378043706369704[166] = 0;
   out_7480378043706369704[167] = 0;
   out_7480378043706369704[168] = 0;
   out_7480378043706369704[169] = 0;
   out_7480378043706369704[170] = 0;
   out_7480378043706369704[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7480378043706369704[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7480378043706369704[173] = 0;
   out_7480378043706369704[174] = 0;
   out_7480378043706369704[175] = 0;
   out_7480378043706369704[176] = 1;
   out_7480378043706369704[177] = 0;
   out_7480378043706369704[178] = 0;
   out_7480378043706369704[179] = 0;
   out_7480378043706369704[180] = 0;
   out_7480378043706369704[181] = 0;
   out_7480378043706369704[182] = 0;
   out_7480378043706369704[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7480378043706369704[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7480378043706369704[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7480378043706369704[186] = 0;
   out_7480378043706369704[187] = 0;
   out_7480378043706369704[188] = 0;
   out_7480378043706369704[189] = 0;
   out_7480378043706369704[190] = 0;
   out_7480378043706369704[191] = 0;
   out_7480378043706369704[192] = 0;
   out_7480378043706369704[193] = 0;
   out_7480378043706369704[194] = 0;
   out_7480378043706369704[195] = 0;
   out_7480378043706369704[196] = 0;
   out_7480378043706369704[197] = 0;
   out_7480378043706369704[198] = 1;
   out_7480378043706369704[199] = 0;
   out_7480378043706369704[200] = 0;
   out_7480378043706369704[201] = 0;
   out_7480378043706369704[202] = 0;
   out_7480378043706369704[203] = 0;
   out_7480378043706369704[204] = 0;
   out_7480378043706369704[205] = 0;
   out_7480378043706369704[206] = 0;
   out_7480378043706369704[207] = 0;
   out_7480378043706369704[208] = 0;
   out_7480378043706369704[209] = 0;
   out_7480378043706369704[210] = 0;
   out_7480378043706369704[211] = 0;
   out_7480378043706369704[212] = 0;
   out_7480378043706369704[213] = 0;
   out_7480378043706369704[214] = 0;
   out_7480378043706369704[215] = 0;
   out_7480378043706369704[216] = 0;
   out_7480378043706369704[217] = 0;
   out_7480378043706369704[218] = 0;
   out_7480378043706369704[219] = 0;
   out_7480378043706369704[220] = 1;
   out_7480378043706369704[221] = 0;
   out_7480378043706369704[222] = 0;
   out_7480378043706369704[223] = 0;
   out_7480378043706369704[224] = 0;
   out_7480378043706369704[225] = 0;
   out_7480378043706369704[226] = 0;
   out_7480378043706369704[227] = 0;
   out_7480378043706369704[228] = 0;
   out_7480378043706369704[229] = 0;
   out_7480378043706369704[230] = 0;
   out_7480378043706369704[231] = 0;
   out_7480378043706369704[232] = 0;
   out_7480378043706369704[233] = 0;
   out_7480378043706369704[234] = 0;
   out_7480378043706369704[235] = 0;
   out_7480378043706369704[236] = 0;
   out_7480378043706369704[237] = 0;
   out_7480378043706369704[238] = 0;
   out_7480378043706369704[239] = 0;
   out_7480378043706369704[240] = 0;
   out_7480378043706369704[241] = 0;
   out_7480378043706369704[242] = 1;
   out_7480378043706369704[243] = 0;
   out_7480378043706369704[244] = 0;
   out_7480378043706369704[245] = 0;
   out_7480378043706369704[246] = 0;
   out_7480378043706369704[247] = 0;
   out_7480378043706369704[248] = 0;
   out_7480378043706369704[249] = 0;
   out_7480378043706369704[250] = 0;
   out_7480378043706369704[251] = 0;
   out_7480378043706369704[252] = 0;
   out_7480378043706369704[253] = 0;
   out_7480378043706369704[254] = 0;
   out_7480378043706369704[255] = 0;
   out_7480378043706369704[256] = 0;
   out_7480378043706369704[257] = 0;
   out_7480378043706369704[258] = 0;
   out_7480378043706369704[259] = 0;
   out_7480378043706369704[260] = 0;
   out_7480378043706369704[261] = 0;
   out_7480378043706369704[262] = 0;
   out_7480378043706369704[263] = 0;
   out_7480378043706369704[264] = 1;
   out_7480378043706369704[265] = 0;
   out_7480378043706369704[266] = 0;
   out_7480378043706369704[267] = 0;
   out_7480378043706369704[268] = 0;
   out_7480378043706369704[269] = 0;
   out_7480378043706369704[270] = 0;
   out_7480378043706369704[271] = 0;
   out_7480378043706369704[272] = 0;
   out_7480378043706369704[273] = 0;
   out_7480378043706369704[274] = 0;
   out_7480378043706369704[275] = 0;
   out_7480378043706369704[276] = 0;
   out_7480378043706369704[277] = 0;
   out_7480378043706369704[278] = 0;
   out_7480378043706369704[279] = 0;
   out_7480378043706369704[280] = 0;
   out_7480378043706369704[281] = 0;
   out_7480378043706369704[282] = 0;
   out_7480378043706369704[283] = 0;
   out_7480378043706369704[284] = 0;
   out_7480378043706369704[285] = 0;
   out_7480378043706369704[286] = 1;
   out_7480378043706369704[287] = 0;
   out_7480378043706369704[288] = 0;
   out_7480378043706369704[289] = 0;
   out_7480378043706369704[290] = 0;
   out_7480378043706369704[291] = 0;
   out_7480378043706369704[292] = 0;
   out_7480378043706369704[293] = 0;
   out_7480378043706369704[294] = 0;
   out_7480378043706369704[295] = 0;
   out_7480378043706369704[296] = 0;
   out_7480378043706369704[297] = 0;
   out_7480378043706369704[298] = 0;
   out_7480378043706369704[299] = 0;
   out_7480378043706369704[300] = 0;
   out_7480378043706369704[301] = 0;
   out_7480378043706369704[302] = 0;
   out_7480378043706369704[303] = 0;
   out_7480378043706369704[304] = 0;
   out_7480378043706369704[305] = 0;
   out_7480378043706369704[306] = 0;
   out_7480378043706369704[307] = 0;
   out_7480378043706369704[308] = 1;
   out_7480378043706369704[309] = 0;
   out_7480378043706369704[310] = 0;
   out_7480378043706369704[311] = 0;
   out_7480378043706369704[312] = 0;
   out_7480378043706369704[313] = 0;
   out_7480378043706369704[314] = 0;
   out_7480378043706369704[315] = 0;
   out_7480378043706369704[316] = 0;
   out_7480378043706369704[317] = 0;
   out_7480378043706369704[318] = 0;
   out_7480378043706369704[319] = 0;
   out_7480378043706369704[320] = 0;
   out_7480378043706369704[321] = 0;
   out_7480378043706369704[322] = 0;
   out_7480378043706369704[323] = 0;
   out_7480378043706369704[324] = 0;
   out_7480378043706369704[325] = 0;
   out_7480378043706369704[326] = 0;
   out_7480378043706369704[327] = 0;
   out_7480378043706369704[328] = 0;
   out_7480378043706369704[329] = 0;
   out_7480378043706369704[330] = 1;
   out_7480378043706369704[331] = 0;
   out_7480378043706369704[332] = 0;
   out_7480378043706369704[333] = 0;
   out_7480378043706369704[334] = 0;
   out_7480378043706369704[335] = 0;
   out_7480378043706369704[336] = 0;
   out_7480378043706369704[337] = 0;
   out_7480378043706369704[338] = 0;
   out_7480378043706369704[339] = 0;
   out_7480378043706369704[340] = 0;
   out_7480378043706369704[341] = 0;
   out_7480378043706369704[342] = 0;
   out_7480378043706369704[343] = 0;
   out_7480378043706369704[344] = 0;
   out_7480378043706369704[345] = 0;
   out_7480378043706369704[346] = 0;
   out_7480378043706369704[347] = 0;
   out_7480378043706369704[348] = 0;
   out_7480378043706369704[349] = 0;
   out_7480378043706369704[350] = 0;
   out_7480378043706369704[351] = 0;
   out_7480378043706369704[352] = 1;
   out_7480378043706369704[353] = 0;
   out_7480378043706369704[354] = 0;
   out_7480378043706369704[355] = 0;
   out_7480378043706369704[356] = 0;
   out_7480378043706369704[357] = 0;
   out_7480378043706369704[358] = 0;
   out_7480378043706369704[359] = 0;
   out_7480378043706369704[360] = 0;
   out_7480378043706369704[361] = 0;
   out_7480378043706369704[362] = 0;
   out_7480378043706369704[363] = 0;
   out_7480378043706369704[364] = 0;
   out_7480378043706369704[365] = 0;
   out_7480378043706369704[366] = 0;
   out_7480378043706369704[367] = 0;
   out_7480378043706369704[368] = 0;
   out_7480378043706369704[369] = 0;
   out_7480378043706369704[370] = 0;
   out_7480378043706369704[371] = 0;
   out_7480378043706369704[372] = 0;
   out_7480378043706369704[373] = 0;
   out_7480378043706369704[374] = 1;
   out_7480378043706369704[375] = 0;
   out_7480378043706369704[376] = 0;
   out_7480378043706369704[377] = 0;
   out_7480378043706369704[378] = 0;
   out_7480378043706369704[379] = 0;
   out_7480378043706369704[380] = 0;
   out_7480378043706369704[381] = 0;
   out_7480378043706369704[382] = 0;
   out_7480378043706369704[383] = 0;
   out_7480378043706369704[384] = 0;
   out_7480378043706369704[385] = 0;
   out_7480378043706369704[386] = 0;
   out_7480378043706369704[387] = 0;
   out_7480378043706369704[388] = 0;
   out_7480378043706369704[389] = 0;
   out_7480378043706369704[390] = 0;
   out_7480378043706369704[391] = 0;
   out_7480378043706369704[392] = 0;
   out_7480378043706369704[393] = 0;
   out_7480378043706369704[394] = 0;
   out_7480378043706369704[395] = 0;
   out_7480378043706369704[396] = 1;
   out_7480378043706369704[397] = 0;
   out_7480378043706369704[398] = 0;
   out_7480378043706369704[399] = 0;
   out_7480378043706369704[400] = 0;
   out_7480378043706369704[401] = 0;
   out_7480378043706369704[402] = 0;
   out_7480378043706369704[403] = 0;
   out_7480378043706369704[404] = 0;
   out_7480378043706369704[405] = 0;
   out_7480378043706369704[406] = 0;
   out_7480378043706369704[407] = 0;
   out_7480378043706369704[408] = 0;
   out_7480378043706369704[409] = 0;
   out_7480378043706369704[410] = 0;
   out_7480378043706369704[411] = 0;
   out_7480378043706369704[412] = 0;
   out_7480378043706369704[413] = 0;
   out_7480378043706369704[414] = 0;
   out_7480378043706369704[415] = 0;
   out_7480378043706369704[416] = 0;
   out_7480378043706369704[417] = 0;
   out_7480378043706369704[418] = 1;
   out_7480378043706369704[419] = 0;
   out_7480378043706369704[420] = 0;
   out_7480378043706369704[421] = 0;
   out_7480378043706369704[422] = 0;
   out_7480378043706369704[423] = 0;
   out_7480378043706369704[424] = 0;
   out_7480378043706369704[425] = 0;
   out_7480378043706369704[426] = 0;
   out_7480378043706369704[427] = 0;
   out_7480378043706369704[428] = 0;
   out_7480378043706369704[429] = 0;
   out_7480378043706369704[430] = 0;
   out_7480378043706369704[431] = 0;
   out_7480378043706369704[432] = 0;
   out_7480378043706369704[433] = 0;
   out_7480378043706369704[434] = 0;
   out_7480378043706369704[435] = 0;
   out_7480378043706369704[436] = 0;
   out_7480378043706369704[437] = 0;
   out_7480378043706369704[438] = 0;
   out_7480378043706369704[439] = 0;
   out_7480378043706369704[440] = 1;
}
void h_4(double *state, double *unused, double *out_904402081155690941) {
   out_904402081155690941[0] = state[10] + state[13];
   out_904402081155690941[1] = state[11] + state[14];
   out_904402081155690941[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6327695051802815796) {
   out_6327695051802815796[0] = 0;
   out_6327695051802815796[1] = 0;
   out_6327695051802815796[2] = 0;
   out_6327695051802815796[3] = 0;
   out_6327695051802815796[4] = 0;
   out_6327695051802815796[5] = 0;
   out_6327695051802815796[6] = 0;
   out_6327695051802815796[7] = 0;
   out_6327695051802815796[8] = 0;
   out_6327695051802815796[9] = 0;
   out_6327695051802815796[10] = 1;
   out_6327695051802815796[11] = 0;
   out_6327695051802815796[12] = 0;
   out_6327695051802815796[13] = 1;
   out_6327695051802815796[14] = 0;
   out_6327695051802815796[15] = 0;
   out_6327695051802815796[16] = 0;
   out_6327695051802815796[17] = 0;
   out_6327695051802815796[18] = 0;
   out_6327695051802815796[19] = 0;
   out_6327695051802815796[20] = 0;
   out_6327695051802815796[21] = 0;
   out_6327695051802815796[22] = 0;
   out_6327695051802815796[23] = 0;
   out_6327695051802815796[24] = 0;
   out_6327695051802815796[25] = 0;
   out_6327695051802815796[26] = 0;
   out_6327695051802815796[27] = 0;
   out_6327695051802815796[28] = 0;
   out_6327695051802815796[29] = 0;
   out_6327695051802815796[30] = 0;
   out_6327695051802815796[31] = 0;
   out_6327695051802815796[32] = 0;
   out_6327695051802815796[33] = 1;
   out_6327695051802815796[34] = 0;
   out_6327695051802815796[35] = 0;
   out_6327695051802815796[36] = 1;
   out_6327695051802815796[37] = 0;
   out_6327695051802815796[38] = 0;
   out_6327695051802815796[39] = 0;
   out_6327695051802815796[40] = 0;
   out_6327695051802815796[41] = 0;
   out_6327695051802815796[42] = 0;
   out_6327695051802815796[43] = 0;
   out_6327695051802815796[44] = 0;
   out_6327695051802815796[45] = 0;
   out_6327695051802815796[46] = 0;
   out_6327695051802815796[47] = 0;
   out_6327695051802815796[48] = 0;
   out_6327695051802815796[49] = 0;
   out_6327695051802815796[50] = 0;
   out_6327695051802815796[51] = 0;
   out_6327695051802815796[52] = 0;
   out_6327695051802815796[53] = 0;
   out_6327695051802815796[54] = 0;
   out_6327695051802815796[55] = 0;
   out_6327695051802815796[56] = 1;
   out_6327695051802815796[57] = 0;
   out_6327695051802815796[58] = 0;
   out_6327695051802815796[59] = 1;
   out_6327695051802815796[60] = 0;
   out_6327695051802815796[61] = 0;
   out_6327695051802815796[62] = 0;
   out_6327695051802815796[63] = 0;
   out_6327695051802815796[64] = 0;
   out_6327695051802815796[65] = 0;
}
void h_9(double *state, double *unused, double *out_1582515772269223850) {
   out_1582515772269223850[0] = state[10];
   out_1582515772269223850[1] = state[11];
   out_1582515772269223850[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6086505405173225151) {
   out_6086505405173225151[0] = 0;
   out_6086505405173225151[1] = 0;
   out_6086505405173225151[2] = 0;
   out_6086505405173225151[3] = 0;
   out_6086505405173225151[4] = 0;
   out_6086505405173225151[5] = 0;
   out_6086505405173225151[6] = 0;
   out_6086505405173225151[7] = 0;
   out_6086505405173225151[8] = 0;
   out_6086505405173225151[9] = 0;
   out_6086505405173225151[10] = 1;
   out_6086505405173225151[11] = 0;
   out_6086505405173225151[12] = 0;
   out_6086505405173225151[13] = 0;
   out_6086505405173225151[14] = 0;
   out_6086505405173225151[15] = 0;
   out_6086505405173225151[16] = 0;
   out_6086505405173225151[17] = 0;
   out_6086505405173225151[18] = 0;
   out_6086505405173225151[19] = 0;
   out_6086505405173225151[20] = 0;
   out_6086505405173225151[21] = 0;
   out_6086505405173225151[22] = 0;
   out_6086505405173225151[23] = 0;
   out_6086505405173225151[24] = 0;
   out_6086505405173225151[25] = 0;
   out_6086505405173225151[26] = 0;
   out_6086505405173225151[27] = 0;
   out_6086505405173225151[28] = 0;
   out_6086505405173225151[29] = 0;
   out_6086505405173225151[30] = 0;
   out_6086505405173225151[31] = 0;
   out_6086505405173225151[32] = 0;
   out_6086505405173225151[33] = 1;
   out_6086505405173225151[34] = 0;
   out_6086505405173225151[35] = 0;
   out_6086505405173225151[36] = 0;
   out_6086505405173225151[37] = 0;
   out_6086505405173225151[38] = 0;
   out_6086505405173225151[39] = 0;
   out_6086505405173225151[40] = 0;
   out_6086505405173225151[41] = 0;
   out_6086505405173225151[42] = 0;
   out_6086505405173225151[43] = 0;
   out_6086505405173225151[44] = 0;
   out_6086505405173225151[45] = 0;
   out_6086505405173225151[46] = 0;
   out_6086505405173225151[47] = 0;
   out_6086505405173225151[48] = 0;
   out_6086505405173225151[49] = 0;
   out_6086505405173225151[50] = 0;
   out_6086505405173225151[51] = 0;
   out_6086505405173225151[52] = 0;
   out_6086505405173225151[53] = 0;
   out_6086505405173225151[54] = 0;
   out_6086505405173225151[55] = 0;
   out_6086505405173225151[56] = 1;
   out_6086505405173225151[57] = 0;
   out_6086505405173225151[58] = 0;
   out_6086505405173225151[59] = 0;
   out_6086505405173225151[60] = 0;
   out_6086505405173225151[61] = 0;
   out_6086505405173225151[62] = 0;
   out_6086505405173225151[63] = 0;
   out_6086505405173225151[64] = 0;
   out_6086505405173225151[65] = 0;
}
void h_10(double *state, double *unused, double *out_1110366687721286647) {
   out_1110366687721286647[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1110366687721286647[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1110366687721286647[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2997648176330185213) {
   out_2997648176330185213[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2997648176330185213[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2997648176330185213[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2997648176330185213[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2997648176330185213[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2997648176330185213[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2997648176330185213[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2997648176330185213[7] = 0;
   out_2997648176330185213[8] = 0;
   out_2997648176330185213[9] = 0;
   out_2997648176330185213[10] = 0;
   out_2997648176330185213[11] = 0;
   out_2997648176330185213[12] = 0;
   out_2997648176330185213[13] = 0;
   out_2997648176330185213[14] = 0;
   out_2997648176330185213[15] = 0;
   out_2997648176330185213[16] = 1;
   out_2997648176330185213[17] = 0;
   out_2997648176330185213[18] = 0;
   out_2997648176330185213[19] = 1;
   out_2997648176330185213[20] = 0;
   out_2997648176330185213[21] = 0;
   out_2997648176330185213[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2997648176330185213[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2997648176330185213[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2997648176330185213[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2997648176330185213[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2997648176330185213[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2997648176330185213[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2997648176330185213[29] = 0;
   out_2997648176330185213[30] = 0;
   out_2997648176330185213[31] = 0;
   out_2997648176330185213[32] = 0;
   out_2997648176330185213[33] = 0;
   out_2997648176330185213[34] = 0;
   out_2997648176330185213[35] = 0;
   out_2997648176330185213[36] = 0;
   out_2997648176330185213[37] = 0;
   out_2997648176330185213[38] = 0;
   out_2997648176330185213[39] = 1;
   out_2997648176330185213[40] = 0;
   out_2997648176330185213[41] = 0;
   out_2997648176330185213[42] = 1;
   out_2997648176330185213[43] = 0;
   out_2997648176330185213[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2997648176330185213[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2997648176330185213[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2997648176330185213[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2997648176330185213[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2997648176330185213[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2997648176330185213[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2997648176330185213[51] = 0;
   out_2997648176330185213[52] = 0;
   out_2997648176330185213[53] = 0;
   out_2997648176330185213[54] = 0;
   out_2997648176330185213[55] = 0;
   out_2997648176330185213[56] = 0;
   out_2997648176330185213[57] = 0;
   out_2997648176330185213[58] = 0;
   out_2997648176330185213[59] = 0;
   out_2997648176330185213[60] = 0;
   out_2997648176330185213[61] = 0;
   out_2997648176330185213[62] = 1;
   out_2997648176330185213[63] = 0;
   out_2997648176330185213[64] = 0;
   out_2997648176330185213[65] = 1;
}
void h_12(double *state, double *unused, double *out_1890277588110140188) {
   out_1890277588110140188[0] = state[0];
   out_1890277588110140188[1] = state[1];
   out_1890277588110140188[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5706596026755222129) {
   out_5706596026755222129[0] = 1;
   out_5706596026755222129[1] = 0;
   out_5706596026755222129[2] = 0;
   out_5706596026755222129[3] = 0;
   out_5706596026755222129[4] = 0;
   out_5706596026755222129[5] = 0;
   out_5706596026755222129[6] = 0;
   out_5706596026755222129[7] = 0;
   out_5706596026755222129[8] = 0;
   out_5706596026755222129[9] = 0;
   out_5706596026755222129[10] = 0;
   out_5706596026755222129[11] = 0;
   out_5706596026755222129[12] = 0;
   out_5706596026755222129[13] = 0;
   out_5706596026755222129[14] = 0;
   out_5706596026755222129[15] = 0;
   out_5706596026755222129[16] = 0;
   out_5706596026755222129[17] = 0;
   out_5706596026755222129[18] = 0;
   out_5706596026755222129[19] = 0;
   out_5706596026755222129[20] = 0;
   out_5706596026755222129[21] = 0;
   out_5706596026755222129[22] = 0;
   out_5706596026755222129[23] = 1;
   out_5706596026755222129[24] = 0;
   out_5706596026755222129[25] = 0;
   out_5706596026755222129[26] = 0;
   out_5706596026755222129[27] = 0;
   out_5706596026755222129[28] = 0;
   out_5706596026755222129[29] = 0;
   out_5706596026755222129[30] = 0;
   out_5706596026755222129[31] = 0;
   out_5706596026755222129[32] = 0;
   out_5706596026755222129[33] = 0;
   out_5706596026755222129[34] = 0;
   out_5706596026755222129[35] = 0;
   out_5706596026755222129[36] = 0;
   out_5706596026755222129[37] = 0;
   out_5706596026755222129[38] = 0;
   out_5706596026755222129[39] = 0;
   out_5706596026755222129[40] = 0;
   out_5706596026755222129[41] = 0;
   out_5706596026755222129[42] = 0;
   out_5706596026755222129[43] = 0;
   out_5706596026755222129[44] = 0;
   out_5706596026755222129[45] = 0;
   out_5706596026755222129[46] = 1;
   out_5706596026755222129[47] = 0;
   out_5706596026755222129[48] = 0;
   out_5706596026755222129[49] = 0;
   out_5706596026755222129[50] = 0;
   out_5706596026755222129[51] = 0;
   out_5706596026755222129[52] = 0;
   out_5706596026755222129[53] = 0;
   out_5706596026755222129[54] = 0;
   out_5706596026755222129[55] = 0;
   out_5706596026755222129[56] = 0;
   out_5706596026755222129[57] = 0;
   out_5706596026755222129[58] = 0;
   out_5706596026755222129[59] = 0;
   out_5706596026755222129[60] = 0;
   out_5706596026755222129[61] = 0;
   out_5706596026755222129[62] = 0;
   out_5706596026755222129[63] = 0;
   out_5706596026755222129[64] = 0;
   out_5706596026755222129[65] = 0;
}
void h_35(double *state, double *unused, double *out_4328895334668431461) {
   out_4328895334668431461[0] = state[7];
   out_4328895334668431461[1] = state[8];
   out_4328895334668431461[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2961032994430208420) {
   out_2961032994430208420[0] = 0;
   out_2961032994430208420[1] = 0;
   out_2961032994430208420[2] = 0;
   out_2961032994430208420[3] = 0;
   out_2961032994430208420[4] = 0;
   out_2961032994430208420[5] = 0;
   out_2961032994430208420[6] = 0;
   out_2961032994430208420[7] = 1;
   out_2961032994430208420[8] = 0;
   out_2961032994430208420[9] = 0;
   out_2961032994430208420[10] = 0;
   out_2961032994430208420[11] = 0;
   out_2961032994430208420[12] = 0;
   out_2961032994430208420[13] = 0;
   out_2961032994430208420[14] = 0;
   out_2961032994430208420[15] = 0;
   out_2961032994430208420[16] = 0;
   out_2961032994430208420[17] = 0;
   out_2961032994430208420[18] = 0;
   out_2961032994430208420[19] = 0;
   out_2961032994430208420[20] = 0;
   out_2961032994430208420[21] = 0;
   out_2961032994430208420[22] = 0;
   out_2961032994430208420[23] = 0;
   out_2961032994430208420[24] = 0;
   out_2961032994430208420[25] = 0;
   out_2961032994430208420[26] = 0;
   out_2961032994430208420[27] = 0;
   out_2961032994430208420[28] = 0;
   out_2961032994430208420[29] = 0;
   out_2961032994430208420[30] = 1;
   out_2961032994430208420[31] = 0;
   out_2961032994430208420[32] = 0;
   out_2961032994430208420[33] = 0;
   out_2961032994430208420[34] = 0;
   out_2961032994430208420[35] = 0;
   out_2961032994430208420[36] = 0;
   out_2961032994430208420[37] = 0;
   out_2961032994430208420[38] = 0;
   out_2961032994430208420[39] = 0;
   out_2961032994430208420[40] = 0;
   out_2961032994430208420[41] = 0;
   out_2961032994430208420[42] = 0;
   out_2961032994430208420[43] = 0;
   out_2961032994430208420[44] = 0;
   out_2961032994430208420[45] = 0;
   out_2961032994430208420[46] = 0;
   out_2961032994430208420[47] = 0;
   out_2961032994430208420[48] = 0;
   out_2961032994430208420[49] = 0;
   out_2961032994430208420[50] = 0;
   out_2961032994430208420[51] = 0;
   out_2961032994430208420[52] = 0;
   out_2961032994430208420[53] = 1;
   out_2961032994430208420[54] = 0;
   out_2961032994430208420[55] = 0;
   out_2961032994430208420[56] = 0;
   out_2961032994430208420[57] = 0;
   out_2961032994430208420[58] = 0;
   out_2961032994430208420[59] = 0;
   out_2961032994430208420[60] = 0;
   out_2961032994430208420[61] = 0;
   out_2961032994430208420[62] = 0;
   out_2961032994430208420[63] = 0;
   out_2961032994430208420[64] = 0;
   out_2961032994430208420[65] = 0;
}
void h_32(double *state, double *unused, double *out_1659530923952545034) {
   out_1659530923952545034[0] = state[3];
   out_1659530923952545034[1] = state[4];
   out_1659530923952545034[2] = state[5];
   out_1659530923952545034[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3273654689317653448) {
   out_3273654689317653448[0] = 0;
   out_3273654689317653448[1] = 0;
   out_3273654689317653448[2] = 0;
   out_3273654689317653448[3] = 1;
   out_3273654689317653448[4] = 0;
   out_3273654689317653448[5] = 0;
   out_3273654689317653448[6] = 0;
   out_3273654689317653448[7] = 0;
   out_3273654689317653448[8] = 0;
   out_3273654689317653448[9] = 0;
   out_3273654689317653448[10] = 0;
   out_3273654689317653448[11] = 0;
   out_3273654689317653448[12] = 0;
   out_3273654689317653448[13] = 0;
   out_3273654689317653448[14] = 0;
   out_3273654689317653448[15] = 0;
   out_3273654689317653448[16] = 0;
   out_3273654689317653448[17] = 0;
   out_3273654689317653448[18] = 0;
   out_3273654689317653448[19] = 0;
   out_3273654689317653448[20] = 0;
   out_3273654689317653448[21] = 0;
   out_3273654689317653448[22] = 0;
   out_3273654689317653448[23] = 0;
   out_3273654689317653448[24] = 0;
   out_3273654689317653448[25] = 0;
   out_3273654689317653448[26] = 1;
   out_3273654689317653448[27] = 0;
   out_3273654689317653448[28] = 0;
   out_3273654689317653448[29] = 0;
   out_3273654689317653448[30] = 0;
   out_3273654689317653448[31] = 0;
   out_3273654689317653448[32] = 0;
   out_3273654689317653448[33] = 0;
   out_3273654689317653448[34] = 0;
   out_3273654689317653448[35] = 0;
   out_3273654689317653448[36] = 0;
   out_3273654689317653448[37] = 0;
   out_3273654689317653448[38] = 0;
   out_3273654689317653448[39] = 0;
   out_3273654689317653448[40] = 0;
   out_3273654689317653448[41] = 0;
   out_3273654689317653448[42] = 0;
   out_3273654689317653448[43] = 0;
   out_3273654689317653448[44] = 0;
   out_3273654689317653448[45] = 0;
   out_3273654689317653448[46] = 0;
   out_3273654689317653448[47] = 0;
   out_3273654689317653448[48] = 0;
   out_3273654689317653448[49] = 1;
   out_3273654689317653448[50] = 0;
   out_3273654689317653448[51] = 0;
   out_3273654689317653448[52] = 0;
   out_3273654689317653448[53] = 0;
   out_3273654689317653448[54] = 0;
   out_3273654689317653448[55] = 0;
   out_3273654689317653448[56] = 0;
   out_3273654689317653448[57] = 0;
   out_3273654689317653448[58] = 0;
   out_3273654689317653448[59] = 0;
   out_3273654689317653448[60] = 0;
   out_3273654689317653448[61] = 0;
   out_3273654689317653448[62] = 0;
   out_3273654689317653448[63] = 0;
   out_3273654689317653448[64] = 0;
   out_3273654689317653448[65] = 0;
   out_3273654689317653448[66] = 0;
   out_3273654689317653448[67] = 0;
   out_3273654689317653448[68] = 0;
   out_3273654689317653448[69] = 0;
   out_3273654689317653448[70] = 0;
   out_3273654689317653448[71] = 0;
   out_3273654689317653448[72] = 1;
   out_3273654689317653448[73] = 0;
   out_3273654689317653448[74] = 0;
   out_3273654689317653448[75] = 0;
   out_3273654689317653448[76] = 0;
   out_3273654689317653448[77] = 0;
   out_3273654689317653448[78] = 0;
   out_3273654689317653448[79] = 0;
   out_3273654689317653448[80] = 0;
   out_3273654689317653448[81] = 0;
   out_3273654689317653448[82] = 0;
   out_3273654689317653448[83] = 0;
   out_3273654689317653448[84] = 0;
   out_3273654689317653448[85] = 0;
   out_3273654689317653448[86] = 0;
   out_3273654689317653448[87] = 0;
}
void h_13(double *state, double *unused, double *out_2840807863896650648) {
   out_2840807863896650648[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2840807863896650648[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2840807863896650648[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6198575880178307593) {
   out_6198575880178307593[0] = 0;
   out_6198575880178307593[1] = 0;
   out_6198575880178307593[2] = 0;
   out_6198575880178307593[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6198575880178307593[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6198575880178307593[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6198575880178307593[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6198575880178307593[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6198575880178307593[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6198575880178307593[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6198575880178307593[10] = 0;
   out_6198575880178307593[11] = 0;
   out_6198575880178307593[12] = 0;
   out_6198575880178307593[13] = 0;
   out_6198575880178307593[14] = 0;
   out_6198575880178307593[15] = 0;
   out_6198575880178307593[16] = 0;
   out_6198575880178307593[17] = 0;
   out_6198575880178307593[18] = 0;
   out_6198575880178307593[19] = 0;
   out_6198575880178307593[20] = 0;
   out_6198575880178307593[21] = 0;
   out_6198575880178307593[22] = 0;
   out_6198575880178307593[23] = 0;
   out_6198575880178307593[24] = 0;
   out_6198575880178307593[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6198575880178307593[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6198575880178307593[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6198575880178307593[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6198575880178307593[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6198575880178307593[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6198575880178307593[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6198575880178307593[32] = 0;
   out_6198575880178307593[33] = 0;
   out_6198575880178307593[34] = 0;
   out_6198575880178307593[35] = 0;
   out_6198575880178307593[36] = 0;
   out_6198575880178307593[37] = 0;
   out_6198575880178307593[38] = 0;
   out_6198575880178307593[39] = 0;
   out_6198575880178307593[40] = 0;
   out_6198575880178307593[41] = 0;
   out_6198575880178307593[42] = 0;
   out_6198575880178307593[43] = 0;
   out_6198575880178307593[44] = 0;
   out_6198575880178307593[45] = 0;
   out_6198575880178307593[46] = 0;
   out_6198575880178307593[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6198575880178307593[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6198575880178307593[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6198575880178307593[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6198575880178307593[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6198575880178307593[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6198575880178307593[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6198575880178307593[54] = 0;
   out_6198575880178307593[55] = 0;
   out_6198575880178307593[56] = 0;
   out_6198575880178307593[57] = 0;
   out_6198575880178307593[58] = 0;
   out_6198575880178307593[59] = 0;
   out_6198575880178307593[60] = 0;
   out_6198575880178307593[61] = 0;
   out_6198575880178307593[62] = 0;
   out_6198575880178307593[63] = 0;
   out_6198575880178307593[64] = 0;
   out_6198575880178307593[65] = 0;
}
void h_14(double *state, double *unused, double *out_1582515772269223850) {
   out_1582515772269223850[0] = state[10];
   out_1582515772269223850[1] = state[11];
   out_1582515772269223850[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6086505405173225151) {
   out_6086505405173225151[0] = 0;
   out_6086505405173225151[1] = 0;
   out_6086505405173225151[2] = 0;
   out_6086505405173225151[3] = 0;
   out_6086505405173225151[4] = 0;
   out_6086505405173225151[5] = 0;
   out_6086505405173225151[6] = 0;
   out_6086505405173225151[7] = 0;
   out_6086505405173225151[8] = 0;
   out_6086505405173225151[9] = 0;
   out_6086505405173225151[10] = 1;
   out_6086505405173225151[11] = 0;
   out_6086505405173225151[12] = 0;
   out_6086505405173225151[13] = 0;
   out_6086505405173225151[14] = 0;
   out_6086505405173225151[15] = 0;
   out_6086505405173225151[16] = 0;
   out_6086505405173225151[17] = 0;
   out_6086505405173225151[18] = 0;
   out_6086505405173225151[19] = 0;
   out_6086505405173225151[20] = 0;
   out_6086505405173225151[21] = 0;
   out_6086505405173225151[22] = 0;
   out_6086505405173225151[23] = 0;
   out_6086505405173225151[24] = 0;
   out_6086505405173225151[25] = 0;
   out_6086505405173225151[26] = 0;
   out_6086505405173225151[27] = 0;
   out_6086505405173225151[28] = 0;
   out_6086505405173225151[29] = 0;
   out_6086505405173225151[30] = 0;
   out_6086505405173225151[31] = 0;
   out_6086505405173225151[32] = 0;
   out_6086505405173225151[33] = 1;
   out_6086505405173225151[34] = 0;
   out_6086505405173225151[35] = 0;
   out_6086505405173225151[36] = 0;
   out_6086505405173225151[37] = 0;
   out_6086505405173225151[38] = 0;
   out_6086505405173225151[39] = 0;
   out_6086505405173225151[40] = 0;
   out_6086505405173225151[41] = 0;
   out_6086505405173225151[42] = 0;
   out_6086505405173225151[43] = 0;
   out_6086505405173225151[44] = 0;
   out_6086505405173225151[45] = 0;
   out_6086505405173225151[46] = 0;
   out_6086505405173225151[47] = 0;
   out_6086505405173225151[48] = 0;
   out_6086505405173225151[49] = 0;
   out_6086505405173225151[50] = 0;
   out_6086505405173225151[51] = 0;
   out_6086505405173225151[52] = 0;
   out_6086505405173225151[53] = 0;
   out_6086505405173225151[54] = 0;
   out_6086505405173225151[55] = 0;
   out_6086505405173225151[56] = 1;
   out_6086505405173225151[57] = 0;
   out_6086505405173225151[58] = 0;
   out_6086505405173225151[59] = 0;
   out_6086505405173225151[60] = 0;
   out_6086505405173225151[61] = 0;
   out_6086505405173225151[62] = 0;
   out_6086505405173225151[63] = 0;
   out_6086505405173225151[64] = 0;
   out_6086505405173225151[65] = 0;
}
void h_33(double *state, double *unused, double *out_6773537615204010340) {
   out_6773537615204010340[0] = state[16];
   out_6773537615204010340[1] = state[17];
   out_6773537615204010340[2] = state[18];
}
void H_33(double *state, double *unused, double *out_189524010208649184) {
   out_189524010208649184[0] = 0;
   out_189524010208649184[1] = 0;
   out_189524010208649184[2] = 0;
   out_189524010208649184[3] = 0;
   out_189524010208649184[4] = 0;
   out_189524010208649184[5] = 0;
   out_189524010208649184[6] = 0;
   out_189524010208649184[7] = 0;
   out_189524010208649184[8] = 0;
   out_189524010208649184[9] = 0;
   out_189524010208649184[10] = 0;
   out_189524010208649184[11] = 0;
   out_189524010208649184[12] = 0;
   out_189524010208649184[13] = 0;
   out_189524010208649184[14] = 0;
   out_189524010208649184[15] = 0;
   out_189524010208649184[16] = 1;
   out_189524010208649184[17] = 0;
   out_189524010208649184[18] = 0;
   out_189524010208649184[19] = 0;
   out_189524010208649184[20] = 0;
   out_189524010208649184[21] = 0;
   out_189524010208649184[22] = 0;
   out_189524010208649184[23] = 0;
   out_189524010208649184[24] = 0;
   out_189524010208649184[25] = 0;
   out_189524010208649184[26] = 0;
   out_189524010208649184[27] = 0;
   out_189524010208649184[28] = 0;
   out_189524010208649184[29] = 0;
   out_189524010208649184[30] = 0;
   out_189524010208649184[31] = 0;
   out_189524010208649184[32] = 0;
   out_189524010208649184[33] = 0;
   out_189524010208649184[34] = 0;
   out_189524010208649184[35] = 0;
   out_189524010208649184[36] = 0;
   out_189524010208649184[37] = 0;
   out_189524010208649184[38] = 0;
   out_189524010208649184[39] = 1;
   out_189524010208649184[40] = 0;
   out_189524010208649184[41] = 0;
   out_189524010208649184[42] = 0;
   out_189524010208649184[43] = 0;
   out_189524010208649184[44] = 0;
   out_189524010208649184[45] = 0;
   out_189524010208649184[46] = 0;
   out_189524010208649184[47] = 0;
   out_189524010208649184[48] = 0;
   out_189524010208649184[49] = 0;
   out_189524010208649184[50] = 0;
   out_189524010208649184[51] = 0;
   out_189524010208649184[52] = 0;
   out_189524010208649184[53] = 0;
   out_189524010208649184[54] = 0;
   out_189524010208649184[55] = 0;
   out_189524010208649184[56] = 0;
   out_189524010208649184[57] = 0;
   out_189524010208649184[58] = 0;
   out_189524010208649184[59] = 0;
   out_189524010208649184[60] = 0;
   out_189524010208649184[61] = 0;
   out_189524010208649184[62] = 1;
   out_189524010208649184[63] = 0;
   out_189524010208649184[64] = 0;
   out_189524010208649184[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1237325442709970628) {
  H(in_vec, out_1237325442709970628);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3629510305670504186) {
  err_fun(nom_x, delta_x, out_3629510305670504186);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3500694904292406605) {
  inv_err_fun(nom_x, true_x, out_3500694904292406605);
}
void live_H_mod_fun(double *state, double *out_1821110240313906847) {
  H_mod_fun(state, out_1821110240313906847);
}
void live_f_fun(double *state, double dt, double *out_1819509483554871615) {
  f_fun(state,  dt, out_1819509483554871615);
}
void live_F_fun(double *state, double dt, double *out_7480378043706369704) {
  F_fun(state,  dt, out_7480378043706369704);
}
void live_h_4(double *state, double *unused, double *out_904402081155690941) {
  h_4(state, unused, out_904402081155690941);
}
void live_H_4(double *state, double *unused, double *out_6327695051802815796) {
  H_4(state, unused, out_6327695051802815796);
}
void live_h_9(double *state, double *unused, double *out_1582515772269223850) {
  h_9(state, unused, out_1582515772269223850);
}
void live_H_9(double *state, double *unused, double *out_6086505405173225151) {
  H_9(state, unused, out_6086505405173225151);
}
void live_h_10(double *state, double *unused, double *out_1110366687721286647) {
  h_10(state, unused, out_1110366687721286647);
}
void live_H_10(double *state, double *unused, double *out_2997648176330185213) {
  H_10(state, unused, out_2997648176330185213);
}
void live_h_12(double *state, double *unused, double *out_1890277588110140188) {
  h_12(state, unused, out_1890277588110140188);
}
void live_H_12(double *state, double *unused, double *out_5706596026755222129) {
  H_12(state, unused, out_5706596026755222129);
}
void live_h_35(double *state, double *unused, double *out_4328895334668431461) {
  h_35(state, unused, out_4328895334668431461);
}
void live_H_35(double *state, double *unused, double *out_2961032994430208420) {
  H_35(state, unused, out_2961032994430208420);
}
void live_h_32(double *state, double *unused, double *out_1659530923952545034) {
  h_32(state, unused, out_1659530923952545034);
}
void live_H_32(double *state, double *unused, double *out_3273654689317653448) {
  H_32(state, unused, out_3273654689317653448);
}
void live_h_13(double *state, double *unused, double *out_2840807863896650648) {
  h_13(state, unused, out_2840807863896650648);
}
void live_H_13(double *state, double *unused, double *out_6198575880178307593) {
  H_13(state, unused, out_6198575880178307593);
}
void live_h_14(double *state, double *unused, double *out_1582515772269223850) {
  h_14(state, unused, out_1582515772269223850);
}
void live_H_14(double *state, double *unused, double *out_6086505405173225151) {
  H_14(state, unused, out_6086505405173225151);
}
void live_h_33(double *state, double *unused, double *out_6773537615204010340) {
  h_33(state, unused, out_6773537615204010340);
}
void live_H_33(double *state, double *unused, double *out_189524010208649184) {
  H_33(state, unused, out_189524010208649184);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
